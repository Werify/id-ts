(function(a,s){typeof exports=="object"&&typeof module<"u"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(a=typeof globalThis<"u"?globalThis:a||self,s(a["id-ts"]={}))})(this,function(a){"use strict";let s={baseURL:""};const u=async(o,i)=>fetch(s.baseURL+(o||"/api/login"),{method:"post",body:i}).then(r=>r.json()).then(r=>r),c=async(o,i)=>fetch(s.baseURL+(i||"/api/otp"),{method:"post",body:o}).then(r=>r.json()).then(r=>r),f=()=>({config:s,login:u,loginOTP:c,getQRSession:async t=>fetch(s.baseURL+(t||"/api/qr")).then(n=>n.json()).then(n=>n),checkSession:async t=>fetch(s.baseURL+t).then(n=>n.json()).then(n=>n),getUserProfile:async(t,n)=>fetch(s.baseURL+(n||"/api/user/profile"),{headers:{authorization:t}}).then(e=>e.json()).then(e=>e),getUserNumbers:async(t,n)=>fetch(s.baseURL+(n||"/api/user/profile/mobile-numbers"),{headers:{authorization:t}}).then(e=>e.json()).then(e=>e),getFinancialInfo:async(t,n)=>fetch(s.baseURL+(n||"/api/user/financial-information"),{headers:{authorization:t}}).then(e=>e.json()).then(e=>e),updateUserProfile:async(t,n)=>fetch(s.baseURL+(n||"/api/user/profile"),{headers:{authorization:t},method:"put"}).then(e=>e.json()).then(e=>e),addMobileNumber:async(t,n,e)=>fetch(s.baseURL+(e||"/api/user/mobile-numbers"),{headers:{authorization:t},method:"post",body:n}).then(h=>h.json()).then(h=>h),updateFinancialInfo:async(t,n)=>fetch(s.baseURL+(n||"/api/user/financial-information"),{headers:{authorization:t},method:"put"}).then(e=>e.json()).then(e=>e),getNewModalSession:async(t,n)=>fetch(s.baseURL+(n||"/api/user/modal"),{headers:{authorization:t}}).then(e=>e.json()).then(e=>e),claimModalSession:async(t,n)=>fetch(s.baseURL+n,{headers:{authorization:t}}).then(e=>e.json()).then(e=>e),claimQRSession:async(t,n)=>fetch(s.baseURL+n,{headers:{authorization:t}}).then(e=>e.json()).then(e=>e),checkUsername:async(t,n)=>fetch(s.baseURL+(n||"/api/user/check-username"),{headers:{authorization:t}}).then(e=>e.json()).then(e=>e)});a.werify=f,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});
